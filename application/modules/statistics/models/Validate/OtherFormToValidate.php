<?php/** * In Controller must write * new Zend_Validate_Callback(new Statistics_Model_Validate_OtherFormToValidate()) * * To get messages need to write * $session             = new Zend_Session_Namespace('test.validate.statistics'); * $this->view->message .= implode(PHP_EOL, $session->alert); * Zend_Session::namespaceUnset('test.validate.statistics'); */class Statistics_Model_Validate_OtherFormToValidate{    /**     * @param array $values     *     * @return bool     */    public function __invoke(array $values)    {        /**         * Conection to database         */        $db = Db_Db::conn();        /**         * To display message in view         */        $session = Extras_Session::sessionNamespace('test.validate.statistics');        /**         * To display many message         */        $session->alert = array();        /**         * For return true or false, by default true if something is wrong will be change to false         */        $isValid = true;        /**         * Do not valid the form if from or type are empty         */        if( empty($values['from']) === true || empty($values['type']) === true ){            $isValid = false;        }        /**         * If from is not empty check if got the format YYYY-MM-DD         */        if( empty($values['from']) === false && preg_match('/^\d{4}\-\d{2}\-\d{2}$/', $values['from']) === false            || empty($values['from']) === false && $values['from'] == "0000-00-00"        ){            $session->alert[] = 'Error con formato de fecha en el campo "Desde", debe ser AAAA-MM-DD';            $isValid = false;        }        /**         * If type appear and from is empty, alert the user that is empty the field         */        if( empty($values['from']) && !empty($values['type']) ){            $session->alert[] = 'Debes seleccionar una fecha en el campo "Desde"';            $isValid = false;        }        /**         * If to is not empty check if got the format YYYY-MM-DD         */        if( !empty($values['to']) && !preg_match('/^\d{4}\-\d{2}\-\d{2}$/', $values['to']) ){            $session->alert[] = 'Error con formato de fecha en el campo "Hasta", debe ser AAAA-MM-DD';            $isValid = false;        }        /**         * Check if from is less than to         */        if( !empty($values['from']) && !empty($values['to']) ){            $date1 = new Zend_Date($values['from'], 'yyyy-MM-dd');            $date2 = new Zend_Date($values['to'], 'yyyy-MM-dd');            if( $date2->compare($date1) == -1 ){                $session->alert[] = 'Error, campo "Desde" no puede ser mayor al campo "Hasta"';                $isValid = false;            }        }        /**         * Check if the user exists in the database and only the users that the system display         * must be regular users and the account is not deleted         */        if( !empty($values['users_id']) ){            $tmpValid = false;            $dbQuery = 'SELECT users_id FROM users                WHERE ( deleted_account = 0 OR deleted_account IS NULL ) AND ( role = "user" OR role = "supervisor" )';            foreach( $db->fetchAll($dbQuery) as $v ){                if( $v['users_id'] == $values['users_id'] ){                    $tmpValid = true;                    break;                }            }            if( $tmpValid === false ){                $session->alert[] = 'Debes seleccionar de acuerdo a los empleados mencionados en el men√∫ desplegable';                $isValid = false;            }        }        return $isValid;    }}